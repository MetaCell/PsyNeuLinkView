syntax = "proto3";

package graph;

service ServeGraph {
    rpc LoadCustomPnl (PNLPath) returns (NullArgument) {}
    rpc LoadScript (ScriptPath) returns (ScriptCompositions) {}
    rpc LoadGraphics (ScriptPath) returns (StyleJSON) {}
    rpc GetCompositions (NullArgument) returns (ScriptCompositions) {}
    rpc GetJSON (GraphName) returns (GraphJSON) {}
    rpc HealthCheck (NullArgument) returns (HealthStatus) {}
    rpc UpdateStylesheet (stream StyleJSON) returns (NullArgument) {}
    rpc RunComposition (RunTimeParams) returns (stream Entry) {}
}

message NullArgument {

}

message HealthStatus {
    string status = 1;
}

message PNLPath {
    string path = 1;
}

message ScriptPath {
    string path = 1;
}

message ScriptCompositions {
    repeated string compositions = 1;
}

message GraphName {
    string name = 1;
}

message GraphJSON {
    string objectsJSON = 1;
    string styleJSON = 2;
}

message StyleJSON {
    string styleJSON = 1;
}

message DoubleMatrix {
    uint32 rows = 1;
    uint32 cols = 2;
    repeated double data = 3 [packed=true];
}

message Entry {
    string componentName = 1;
    string parameterName = 2;
    string time = 3;
    string context = 4;
    DoubleMatrix value = 5;
}

enum serveCondition {
    INITIALIZATION = 0;
    VALIDATION = 1;
    EXECUTION = 2;
    PROCESSING = 3;
    LEARNING = 4;
    CONTROL = 5;
    SIMULATION = 6;
    TRIAL = 7;
    RUN = 8;
}

message ServePref {
    string componentName = 1;
    string parameterName = 2;
    serveCondition condition = 3;
}

message ServePrefs {
    repeated ServePref servePrefSet = 1;
}

message RunTimeParams {
    map<string, DoubleMatrix> inputs = 1;
    ServePrefs servePrefs = 2;
}
